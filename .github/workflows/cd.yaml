---
name: CD

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - uses: SebRollen/toml-action@v1.2.0
        id: version_manager
        with:
          file: 'manager/Cargo.toml'
          field: 'package.version'

      - uses: SebRollen/toml-action@v1.2.0
        id: version_agent
        with:
          file: 'agent/Cargo.toml'
          field: 'package.version'

      # Overall tagging follows the managers package version
      - id: tag_check
        run: |
          [[ $(git tag | grep "v${{ steps.version_manager.outputs.value }}") != '' ]]

      # Only create a release when the above version isn't already tagged
      # aka a new release
      - id: create_release
        if: ${{ success() }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.version_manager.outputs.value }}
          name: Release v${{ steps.version_manager.outputs.value }}
          generate_release_notes: true

    outputs:
      tag_check: ${{ steps.tag_check.conclusion }}
      version_manager: ${{ steps.version_manager.outputs.value }}
      version_agent: ${{ steps.version_agent.outputs.value }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build
        run: cargo build --release --all-features

      - name: upload release binary
        if: ${{ success() }}
        id: upload_release_binary
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ needs.release.outputs.version }}
          files: |
            ./target/release/stignore-manager
            ./target/release/stignore-agent

  build_container:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract manager metadata (tags, labels) for Docker
        id: meta_manager
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/dalmura/stignore-manager

      - name: Extract agent metadata (tags, labels) for Docker
        id: meta_agent
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/dalmura/stignore-agent

      - name: Build and push manager
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta_manager.outputs.tags }}
          labels: ${{ steps.meta_manager.outputs.labels }}
          target: manager

      - name: Build and push agent
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta_agent.outputs.tags }}
          labels: ${{ steps.meta_agent.outputs.labels }}
          target: agent
